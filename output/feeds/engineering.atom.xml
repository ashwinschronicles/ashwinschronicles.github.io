<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ashwin's Chronicles - Engineering</title><link href="https://ashwinschronicles.github.io/" rel="alternate"></link><link href="https://ashwinschronicles.github.io/feeds/engineering.atom.xml" rel="self"></link><id>https://ashwinschronicles.github.io/</id><updated>2018-07-12T00:00:00+05:30</updated><entry><title>A beginers IoT Project.</title><link href="https://ashwinschronicles.github.io/Intro-to-IoT" rel="alternate"></link><published>2018-07-12T00:00:00+05:30</published><updated>2018-07-12T00:00:00+05:30</updated><author><name>Ashwin</name></author><id>tag:ashwinschronicles.github.io,2018-07-12:/Intro-to-IoT</id><summary type="html">&lt;p&gt;In this post, we’ll be making a simple IoT project. Web page controlled &lt;span class="caps"&gt;LED&lt;/span&gt; strip using NodeMCU connected on a local&amp;nbsp;network.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this post, we&amp;rsquo;ll be making a simple IoT project. Web page controlled &lt;span class="caps"&gt;LED&lt;/span&gt; strip using NodeMCU connected on a local&amp;nbsp;network.&lt;/p&gt;
&lt;h2 id="outline"&gt;Outline:&lt;a class="headerlink" href="#outline" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Web page controlled &lt;span class="caps"&gt;LED&lt;/span&gt; strip is like the &amp;ldquo;Hello world&amp;rdquo; of IoT. In this post I will be detailing on the procedure I followed to set it up. The schematic of the project will be as&amp;nbsp;follows:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Schematic" src=".././images/IoT_1_schematic.png"/&gt;&lt;/p&gt;
&lt;p&gt;So when we click a button on a web browser we can turn the led strip on or off using a relay which we control using the &lt;span class="caps"&gt;ESP8266&lt;/span&gt;&amp;nbsp;board.&lt;/p&gt;
&lt;h2 id="materials"&gt;Materials:&lt;a class="headerlink" href="#materials" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NodeMCU&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="nodemcu" src=".././images/IoT_2_nodemcu.jpeg" style="zoom: 33%;"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5v&amp;nbsp;Relay&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="relay" src=".././images/IoT_3_relay.jpeg" style="zoom: 50%;"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;LED&lt;/span&gt;&amp;nbsp;strip&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;LED&lt;/span&gt; strip power supply (any generic 12V power&amp;nbsp;supply)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="powersupply" src=".././images/IoT_4_powersupply.jpeg" style="zoom:33%;"/&gt;&lt;/p&gt;
&lt;h2 id="installing-nodemcu-board-package-in-arduino-ide"&gt;Installing NodeMCU Board Package in Arduino &lt;span class="caps"&gt;IDE&lt;/span&gt;:&lt;a class="headerlink" href="#installing-nodemcu-board-package-in-arduino-ide" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Open up Arduino &lt;span class="caps"&gt;IDE&lt;/span&gt;. Go to Files-&amp;gt; Preferences. Enter &lt;code&gt;http://arduino.esp8266.com/stable/package_esp8266com_index.json&lt;/code&gt; into Additional Board Manager URLs&amp;nbsp;field.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="IoT_5_preference" src="../images/IoT_5_preference.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now go to Tools-&amp;gt;Boards-&amp;gt;Board Manager, and search for &lt;span class="caps"&gt;ESP8266&lt;/span&gt; and install the&amp;nbsp;package.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="IoT_6_board" src="../images/IoT_6_board.jpg"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you have the same board as me (NodeMCU Amica) then you will have to install drivers for &lt;span class="caps"&gt;CP2102&lt;/span&gt; (&lt;span class="caps"&gt;USB&lt;/span&gt; to Serial&amp;nbsp;Converter)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;[Note: some board come with CH340G chip in which case you dont need to follow this step.]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Download drivers from &lt;a href="https://www.silabs.com/products/mcu/Pages/USBtoUARTBridgeVCPDrivers.aspx"&gt;here &lt;/a&gt;and install it. Connect the nodeMCU to your computer and install the downloaded drives when your system prompts to install the drivers for the newly connected &lt;span class="caps"&gt;USB&lt;/span&gt; device.Go to the device manager of your computer and note down the &lt;span class="caps"&gt;COM&lt;/span&gt; port allocated to the newly connected &lt;span class="caps"&gt;USB&lt;/span&gt;&amp;nbsp;device.&lt;/p&gt;
&lt;p&gt;&lt;img alt="IoT_7_deveicemanager" src="../images/IoT_7_deveicemanager.png"/&gt;&lt;/p&gt;
&lt;h2 id="pin-connections"&gt;Pin Connections:&lt;a class="headerlink" href="#pin-connections" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Connect &lt;strong&gt;NodeMCU&lt;/strong&gt; Ground (&lt;strong&gt;&lt;span class="caps"&gt;GND&lt;/span&gt;&lt;/strong&gt;) pin to &lt;strong&gt;-ve&lt;/strong&gt; pin of &lt;strong&gt;Relay&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Connect &lt;strong&gt;NodeMCU&lt;/strong&gt; Supply (&lt;strong&gt;Vin)&lt;/strong&gt; pin to &lt;strong&gt;+ve&lt;/strong&gt; pin of &lt;strong&gt;Relay&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Connect &lt;strong&gt;NodeMCU&lt;/strong&gt; Digital pin (&lt;strong&gt;D0&lt;/strong&gt;) to &lt;strong&gt;Input&lt;/strong&gt; pin of &lt;strong&gt;Relay&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id="coding-part"&gt;Coding Part&lt;a class="headerlink" href="#coding-part" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The code for the nodeMCU that I have uploaded is &lt;a href="https://raw.githubusercontent.com/iamashwin26/Projs/master/Introduction to IoT/Source_code_hello_IoT.ino"&gt;here&lt;/a&gt; . Replace the&amp;nbsp;line&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;WiFi.softAP("Hello_IoT", "ashwins12345678");&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;with whatever &lt;span class="caps"&gt;SSID&lt;/span&gt; and password you want to&amp;nbsp;put.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;NOTE. This sketch uses WiFi.softAP instead of the commonly used WiFi.begin, the reason is that when I use WiFi.begin() I can't find the SSID when I do WiFi scan, however, the SSID I do see is of the previous sketch where I used WiFi.softAP(). If you encounter the same problem while using WiFi.begin then using my code should fix it.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When u have successfully built your connection and the code, you have to upload the code into the NodeMCU by using a micro &lt;span class="caps"&gt;USB&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Now, go to Tools &amp;gt; Board &amp;gt; &lt;span class="caps"&gt;ESP8266&lt;/span&gt; Modules and you can see many options for &lt;span class="caps"&gt;ESP8266&lt;/span&gt;. Select &amp;ldquo;NodeMCU 1.0 (&lt;span class="caps"&gt;ESP&lt;/span&gt;-12E Module). Next, select your port ( the same one you saw in the device manager previously ). If you cant recognize your port, go to the Control Panel &amp;gt; System &amp;gt; Device Manager &amp;gt; Port and update your &lt;span class="caps"&gt;USB&lt;/span&gt;&amp;nbsp;driver.&lt;/p&gt;
&lt;p&gt;Now upload the code to the&amp;nbsp;board.&lt;/p&gt;
&lt;p&gt;&lt;img alt="IoT_8_upload" src="../images/IoT_8_upload.png"/&gt;&lt;/p&gt;
&lt;h2 id="finale-testing"&gt;Finale testing:&lt;a class="headerlink" href="#finale-testing" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Now open up your Serial Monitor, and note down the &lt;span class="caps"&gt;URL&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="IoT_9_serialmonitor" src="../images/IoT_9_serialmonitor.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now put the &lt;span class="caps"&gt;URL&lt;/span&gt; in your phone&amp;rsquo;s browser( it usually defaults to&amp;nbsp;192.168.4.1).&lt;/li&gt;
&lt;li&gt;A page will open having two buttons &lt;span class="caps"&gt;ON&lt;/span&gt; and &lt;span class="caps"&gt;OFF&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="IoT_10_broser" src="../images/IoT_10_broser.jpeg" style="zoom:67%;"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If everything is correct when you press &lt;span class="caps"&gt;ON&lt;/span&gt; the &lt;span class="caps"&gt;LED&lt;/span&gt; will light up and when you press &lt;span class="caps"&gt;OFF&lt;/span&gt; the &lt;span class="caps"&gt;LED&lt;/span&gt; will turn&amp;nbsp;off.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="IoT_11_test1" src="../images/IoT_11_test1.gif"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IoT_12_test2" src="../images/IoT_12_test2.gif"/&gt;&lt;/p&gt;
&lt;h2 id="final-connections"&gt;Final Connections:&lt;a class="headerlink" href="#final-connections" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Now that we know our code and setup works let&amp;rsquo;s connect the relay to the led strip power source as shown in the figure in the outline&amp;nbsp;section.&lt;/p&gt;
&lt;p&gt;&lt;img alt="IoT_13_test3" src="../images/IoT_13_test3.gif"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IoT_14_tes5" src="../images/IoT_14_tes5.gif"/&gt;&lt;/p&gt;
&lt;p&gt;Vola! there&amp;rsquo;s our first&amp;nbsp;project!&lt;/p&gt;
&lt;h2 id="whats-next"&gt;Whats next?&lt;a class="headerlink" href="#whats-next" title="Permanent link"&gt; &lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We can add more feature to the project such as making it connect to a wifi router so that you can access the &lt;span class="caps"&gt;LED&lt;/span&gt; strip from anywhere in the world. We can convert this project to use the barebone &lt;span class="caps"&gt;ESP8266&lt;/span&gt; and &lt;span class="caps"&gt;FTDI&lt;/span&gt; programmer. We can use the power supply of the &lt;span class="caps"&gt;LED&lt;/span&gt; strip to power the &lt;span class="caps"&gt;ESP8266&lt;/span&gt; (Not recommended since most &lt;span class="caps"&gt;LED&lt;/span&gt; power supply have high &lt;span class="caps"&gt;AC&lt;/span&gt; noise as I found out in my case and hence can damage the &lt;span class="caps"&gt;ESP8266&lt;/span&gt; board).Add more devices for the &lt;span class="caps"&gt;ESP&lt;/span&gt; to control and much much more! All&amp;nbsp;that&lt;/p&gt;</content><category term="Engineering"></category><category term="IoT"></category></entry></feed>